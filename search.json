[{"path":"https://msperlin.github.io/GetTDData/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 GetTDData authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://msperlin.github.io/GetTDData/articles/gtdd-vignette_GetTDData.html","id":"how-to-use-gettddata","dir":"Articles","previous_headings":"","what":"How to use GetTDData","title":"How to use GetTDData","text":"Suppose need financial data (prices yields) bond type LTN maturity (end contract) 2023-01-01. bullet bond basic debt contract Brazilian government issues. pay value (coupon) lifetime pay 1000 R$ maturity. order get data, need run following code R: Let’s plot prices check code worked:  expected, prices bond converge face value, 1000 R$, maturity date. can also look time-varying annual yield:  default, GetTDData downloads available data website. Suppose wanted look prices available maturities bonds type LTN. Since data already downloaded, need plot prices yields different debt contracts:","code":"library(GetTDData)  assets <- 'LTN'   # Identifier of assets  first_year <- 2020 last_year <- 2022  df_td <- td_get(assets,                 first_year,                 last_year) ## ## ── Downloading TD files ## ℹ Downloading LTN_2020.xls ## ✔  /tmp/Rtmp3sAu0N/TD-temp/LTN_2020.xls is found, with size 176.1 kB. ## ℹ Downloading LTN_2021.xls ## ✔  /tmp/Rtmp3sAu0N/TD-temp/LTN_2021.xls is found, with size 175.1 kB. ## ℹ Downloading LTN_2022.xls ## ✔  /tmp/Rtmp3sAu0N/TD-temp/LTN_2022.xls is found, with size 175.6 kB. ## ## ── Checking files ## ✔ Found 3 files ## ## ── Reading files ## ℹ Reading /tmp/Rtmp3sAu0N/TD-temp/LTN_2020.xls ## ✔  Reading Sheet LTN 010121 ## ✔  Reading Sheet LTN 010122 ## ✔  Reading Sheet LTN 010123 ## ✔  Reading Sheet LTN 010125 ## ✔  Reading Sheet LTN 010126 ## ℹ Reading /tmp/Rtmp3sAu0N/TD-temp/LTN_2021.xls ## ✔  Reading Sheet LTN 010122 ## ✔  Reading Sheet LTN 010123 ## ✔  Reading Sheet LTN 010724 ## ✔  Reading Sheet LTN 010125 ## ✔  Reading Sheet LTN 010126 ## ℹ Reading /tmp/Rtmp3sAu0N/TD-temp/LTN_2022.xls ## ✔  Reading Sheet LTN 010123 ## ✔  Reading Sheet LTN 010724 ## ✔  Reading Sheet LTN 010125 ## ✔  Reading Sheet LTN 010126 ## ✔  Reading Sheet LTN 010129 library(ggplot2) library(dplyr) ##  ## Attaching package: 'dplyr' ## The following objects are masked from 'package:stats': ##  ##     filter, lag ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union # filter  LTN  my_asset_code <- \"LTN 010123\"  LTN <- df_td %>%   filter(asset_code  ==  my_asset_code)  p <- ggplot(data = LTN,              aes(x = as.Date(ref_date),                  y = price_bid,                  color = asset_code)) +    geom_line(size = 1) + scale_x_date() + labs(title = '', x = 'Dates') ## Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. ## ℹ Please use `linewidth` instead. print(p) p <- ggplot(data = LTN,              aes(x = as.Date(ref_date),                  y = yield_bid,                  color = asset_code)) +    geom_line(linewidth = 1) +    scale_x_date() +    labs(title = '',         x = 'Dates')  print(p) # plot data (prices) p <- ggplot(data = df_td,              aes(x = as.Date(ref_date),                  y = price_bid,                  color = asset_code)) +    geom_line() +    scale_x_date() +    labs(title = '', x = 'Dates', y = 'Prices' )  print(p) # plot data (yields) p <- ggplot(data = df_td,              aes(x = as.Date(ref_date), y = yield_bid, color = asset_code)) +    geom_line() +    scale_x_date() +    labs(title = '', x = 'Dates', y = 'Yields' )  print(p)"},{"path":"https://msperlin.github.io/GetTDData/articles/gtdd-vignette_YieldCurve.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Downloading the Current Yield Curve","text":"can plot derised result:","code":"library(GetTDData)  df.yield <- get.yield.curve()   str(df.yield) ## 'data.frame':    112 obs. of  5 variables: ##  $ n.biz.days  : num  126 252 378 504 630 ... ##  $ type        : chr  \"real_return\" \"real_return\" \"real_return\" \"real_return\" ... ##  $ value       : num  6.09 6.32 6.28 6.19 6.11 ... ##  $ ref.date    : Date, format: \"2023-07-31\" \"2024-01-31\" ... ##  $ current.date: Date, format: \"2023-01-26\" \"2023-01-26\" ... library(ggplot2)  p <- ggplot(df.yield, aes(x=ref.date, y = value) ) +   geom_line(size=1) + geom_point() + facet_grid(~type, scales = 'free') +    labs(title = paste0('The current Brazilian Yield Curve '),        subtitle = paste0('Date: ', df.yield$current.date[1])) ## Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. ## ℹ Please use `linewidth` instead. print(p)"},{"path":"https://msperlin.github.io/GetTDData/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marcelo Perlin. Author, maintainer.","code":""},{"path":"https://msperlin.github.io/GetTDData/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Perlin M (2023). GetTDData: Get Data Brazilian Bonds (Tesouro Direto). https://github.com/msperlin/GetTDData/, https://msperlin.github.io/GetTDData/.","code":"@Manual{,   title = {GetTDData: Get Data for Brazilian Bonds (Tesouro Direto)},   author = {Marcelo Perlin},   year = {2023},   note = {https://github.com/msperlin/GetTDData/, https://msperlin.github.io/GetTDData/}, }"},{"path":"https://msperlin.github.io/GetTDData/index.html","id":"package-gettddata","dir":"","previous_headings":"","what":"Get Data for Brazilian Bonds (Tesouro Direto)","title":"Get Data for Brazilian Bonds (Tesouro Direto)","text":"Information regarding prices yields bonds issued Brazilian government can downloaded manually excel files Tesouro Direto website. However, painful aggregate data something useful several files don’t uniform format. Package GetTDData makes process importing data Tesouro direto much easier. need order download data name assets (LFT, LTN, NTN-C, NTN-B, NTN-B Principal, NTN-F).","code":""},{"path":"https://msperlin.github.io/GetTDData/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Get Data for Brazilian Bonds (Tesouro Direto)","text":"","code":"# from CRAN (stable version) install.package('GetTDData')  # from github (development version) devtools::install_github('msperlin/GetTDData')"},{"path":"https://msperlin.github.io/GetTDData/index.html","id":"how-to-use-gettddata","dir":"","previous_headings":"","what":"How to use GetTDData","title":"Get Data for Brazilian Bonds (Tesouro Direto)","text":"See documentation page https://msperlin.github.io/GetTDData/.","code":""},{"path":"https://msperlin.github.io/GetTDData/reference/download.TD.data.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads data of Brazilian government bonds directly from the website — download.TD.data","title":"Downloads data of Brazilian government bonds directly from the website — download.TD.data","text":"function looks tesouro direto website (https://www.tesourodireto.com.br/) downloads files containing prices yields government bonds. can use input asset.codes restrict downloads specific bonds","code":""},{"path":"https://msperlin.github.io/GetTDData/reference/download.TD.data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads data of Brazilian government bonds directly from the website — download.TD.data","text":"","code":"download.TD.data(   asset.codes = \"LTN\",   dl.folder = get_cache_folder(),   do.clean.up = FALSE,   do.overwrite = FALSE,   n.dl = NULL )"},{"path":"https://msperlin.github.io/GetTDData/reference/download.TD.data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloads data of Brazilian government bonds directly from the website — download.TD.data","text":"asset.codes Strings identify assets (1 assets) names excel files. E.g. asset.codes = 'LTN'. set NULL, download available assets dl.folder Name folder save excel files tesouro direto (create exists) .clean.Clean folder downloading? (TRUE FALSE) .overwrite Overwrite excel files? (TRUE FALSE). FALSE, download new data current year n.dl Sets many files download website. Used decrease CRAN CHECK time. default value NULL (downloads files)","code":""},{"path":"https://msperlin.github.io/GetTDData/reference/download.TD.data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads data of Brazilian government bonds directly from the website — download.TD.data","text":"TRUE successful","code":""},{"path":"https://msperlin.github.io/GetTDData/reference/download.TD.data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads data of Brazilian government bonds directly from the website — download.TD.data","text":"","code":"# only download file where string LTN is found # (only 1 file for simplicity) if (FALSE) { download.TD.data(asset.codes = 'LTN', n.dl = 1) } # The excel file should be available in folder 'TD Files' (default name)"},{"path":"https://msperlin.github.io/GetTDData/reference/get.yield.curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the current yield curve — get.yield.curve","title":"Gets the current yield curve — get.yield.curve","text":"Downloads parses information current Brazilian yield curve.","code":""},{"path":"https://msperlin.github.io/GetTDData/reference/get.yield.curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the current yield curve — get.yield.curve","text":"","code":"get.yield.curve()"},{"path":"https://msperlin.github.io/GetTDData/reference/get.yield.curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the current yield curve — get.yield.curve","text":"dataframe information yield curve","code":""},{"path":"https://msperlin.github.io/GetTDData/reference/get.yield.curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets the current yield curve — get.yield.curve","text":"","code":"if (FALSE) { df.yield <- get.yield.curve() str(df.yield) }"},{"path":"https://msperlin.github.io/GetTDData/reference/get_cache_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns cache directory — get_cache_folder","title":"Returns cache directory — get_cache_folder","text":"Returns cache directory","code":""},{"path":"https://msperlin.github.io/GetTDData/reference/get_cache_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns cache directory — get_cache_folder","text":"","code":"get_cache_folder()"},{"path":"https://msperlin.github.io/GetTDData/reference/get_cache_folder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns cache directory — get_cache_folder","text":"path","code":""},{"path":"https://msperlin.github.io/GetTDData/reference/get_cache_folder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns cache directory — get_cache_folder","text":"","code":"get_cache_folder() #> /tmp/RtmpncDkhR/TD-temp"},{"path":"https://msperlin.github.io/GetTDData/reference/read.TD.files.html","id":null,"dir":"Reference","previous_headings":"","what":"Reading excel files from Tesouro Direto — read.TD.files","title":"Reading excel files from Tesouro Direto — read.TD.files","text":"Reads files downloaded download.TD.data","code":""},{"path":"https://msperlin.github.io/GetTDData/reference/read.TD.files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reading excel files from Tesouro Direto — read.TD.files","text":"","code":"read.TD.files(   dl.folder = \"TD Files\",   cols.to.import = c(1, 2, 4),   col.names = c(\"ref.date\", \"yield.bid\", \"price.bid\") )"},{"path":"https://msperlin.github.io/GetTDData/reference/read.TD.files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reading excel files from Tesouro Direto — read.TD.files","text":"dl.folder Folder excel files tesouro direto cols..import Columns (numeric) import excel files (open check columns excel file tesouro direto details) col.names Names columns final data.frame (size cols..import)","code":""},{"path":"https://msperlin.github.io/GetTDData/reference/read.TD.files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reading excel files from Tesouro Direto — read.TD.files","text":"dataframe data","code":""},{"path":"https://msperlin.github.io/GetTDData/reference/read.TD.files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reading excel files from Tesouro Direto — read.TD.files","text":"","code":"# Downloads data from tesouro direto (only 1 file for simplicity)  dl.folder ='TD Files'  if (FALSE) { download.TD.data(dl.folder = dl.folder, n.dl = 1)  my.df <- read.TD.files(dl.folder = dl.folder) }"},{"path":"https://msperlin.github.io/GetTDData/reference/td_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads data of Brazilian government bonds directly from the website — td_get","title":"Downloads data of Brazilian government bonds directly from the website — td_get","text":"function looks tesouro direto website (https://www.tesourodireto.com.br/) downloads files containing prices yields government bonds. can use input asset_codes restrict downloads specific bonds","code":""},{"path":"https://msperlin.github.io/GetTDData/reference/td_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads data of Brazilian government bonds directly from the website — td_get","text":"","code":"td_get(   asset_codes = \"LTN\",   first_year = 2005,   last_year = as.numeric(format(Sys.Date(), \"%Y\")),   dl_folder = get_cache_folder() )"},{"path":"https://msperlin.github.io/GetTDData/reference/td_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloads data of Brazilian government bonds directly from the website — td_get","text":"asset_codes Strings identify assets (1 assets) names excel files. E.g. asset_codes = 'LTN'. set NULL, download available assets first_year first year data (minimum 2015) last_year first year data dl_folder Name folder save excel files tesouro direto (create exists)","code":""},{"path":"https://msperlin.github.io/GetTDData/reference/td_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads data of Brazilian government bonds directly from the website — td_get","text":"TRUE successful","code":""},{"path":"https://msperlin.github.io/GetTDData/reference/td_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads data of Brazilian government bonds directly from the website — td_get","text":"","code":"if (FALSE) { td_get(\"LTN\", 2020, 2022) }"},{"path":"https://msperlin.github.io/GetTDData/news/index.html","id":"version-153-2023-01-24","dir":"Changelog","previous_headings":"","what":"Version 1.5.3 (2023-01-24)","title":"Version 1.5.3 (2023-01-24)","text":"deprecated functions download.TD.data() read.TD.files(). replaced td_get()","code":""},{"path":"https://msperlin.github.io/GetTDData/news/index.html","id":"version-152-2023-01-01","dir":"Changelog","previous_headings":"","what":"Version 1.5.2 (2023-01-01)","title":"Version 1.5.2 (2023-01-01)","text":"CRAN release: 2023-01-06 now fails gracefuly download files fails.","code":""},{"path":"https://msperlin.github.io/GetTDData/news/index.html","id":"version-151-2022-05-11","dir":"Changelog","previous_headings":"","what":"Version 1.5.1 (2022-05-11)","title":"Version 1.5.1 (2022-05-11)","text":"CRAN release: 2022-05-11 implemented change bizdays::holidaysANBIMA (see issue 10)","code":""},{"path":"https://msperlin.github.io/GetTDData/news/index.html","id":"version-150-2022-04-28","dir":"Changelog","previous_headings":"","what":"Version 1.5.0 (2022-04-28)","title":"Version 1.5.0 (2022-04-28)","text":"improved github actions adding codecov, pkgdown LICENSE added new tests functions removed arguments “maturity” “asset.codes” read.TD.files function","code":""},{"path":"https://msperlin.github.io/GetTDData/news/index.html","id":"version-145-2022-04-06","dir":"Changelog","previous_headings":"","what":"Version 1.4.5 (2022-04-06)","title":"Version 1.4.5 (2022-04-06)","text":"CRAN release: 2022-04-06 Fixed issue download related product NTN-principal issue #8 removed “Date” DESCRIPTION file (seems standard now) increases min R version DESCRIPTION 4.0.0 improved github actions adding codecov pkgdown","code":""},{"path":"https://msperlin.github.io/GetTDData/news/index.html","id":"version-144-2022-03-02","dir":"Changelog","previous_headings":"","what":"Version 1.4.4 (2022-03-02)","title":"Version 1.4.4 (2022-03-02)","text":"CRAN release: 2022-03-02 Fixed issue cran check oldrel (use new pipeline operator, available prior R < 4.1)","code":""},{"path":"https://msperlin.github.io/GetTDData/news/index.html","id":"version-143-2022-02-18","dir":"Changelog","previous_headings":"","what":"Version 1.4.3 (2022-02-18)","title":"Version 1.4.3 (2022-02-18)","text":"CRAN release: 2022-02-21 Major change urls Tesouro Direto (See issue #5) Fixed issue get.yield.curve() Fixed issue yields equal 0 (see issue #3)","code":""},{"path":"https://msperlin.github.io/GetTDData/news/index.html","id":"version-142-2019-10-01","dir":"Changelog","previous_headings":"","what":"Version 1.4.2 (2019-10-01)","title":"Version 1.4.2 (2019-10-01)","text":"CRAN release: 2019-10-01 Found alternative address Anbima. (see issue #1)","code":""},{"path":"https://msperlin.github.io/GetTDData/news/index.html","id":"version-141-2019-07-11","dir":"Changelog","previous_headings":"","what":"Version 1.4.1 (2019-07-11)","title":"Version 1.4.1 (2019-07-11)","text":"CRAN release: 2019-07-15 Fixed bug yield function (anbima site …). Need find alternative.","code":""},{"path":"https://msperlin.github.io/GetTDData/news/index.html","id":"version-14-2019-04-02","dir":"Changelog","previous_headings":"","what":"Version 1.4 (2019-04-02)","title":"Version 1.4 (2019-04-02)","text":"CRAN release: 2019-04-02 Fixed bug name importing spreadsheets Prices yield now cleaned (values equal zero)","code":""},{"path":"https://msperlin.github.io/GetTDData/news/index.html","id":"version-13-2017-09-14","dir":"Changelog","previous_headings":"","what":"Version 1.3 (2017-09-14)","title":"Version 1.3 (2017-09-14)","text":"CRAN release: 2017-09-14 Added function downloading current yield curve Anbima Fixed typos vignettes dev version now github fixed bug names NTN-Principal","code":""},{"path":"https://msperlin.github.io/GetTDData/news/index.html","id":"version-125-2016-11-07","dir":"Changelog","previous_headings":"","what":"Version 1.2.5 (2016-11-07)","title":"Version 1.2.5 (2016-11-07)","text":"CRAN release: 2016-11-08 Added maturities instruments extra column dataframe","code":""},{"path":"https://msperlin.github.io/GetTDData/news/index.html","id":"version-124-2016-08-15","dir":"Changelog","previous_headings":"","what":"Version 1.2.4 (2016-08-15)","title":"Version 1.2.4 (2016-08-15)","text":"CRAN release: 2016-08-16 package CHECK process longer depends avaibility Tesouro Direto website. needed files now local","code":""},{"path":"https://msperlin.github.io/GetTDData/news/index.html","id":"version-123-2016-05-22","dir":"Changelog","previous_headings":"","what":"Version 1.2.3 (2016-05-22)","title":"Version 1.2.3 (2016-05-22)","text":"CRAN release: 2016-05-24 Fixed bug html download. Now using new function new algorithm try download 10 times throwing error","code":""},{"path":"https://msperlin.github.io/GetTDData/news/index.html","id":"version-122-2016-05-22","dir":"Changelog","previous_headings":"","what":"Version 1.2.2 (2016-05-22)","title":"Version 1.2.2 (2016-05-22)","text":"CRAN release: 2016-05-22 html structure Tesouro Website changed resulted CHECK errors package. update fixed . Fixed TD names read function (TD website mess!) Now also using input asset.codes read function","code":""},{"path":"https://msperlin.github.io/GetTDData/news/index.html","id":"version-121-2016-05-04","dir":"Changelog","previous_headings":"","what":"Version 1.2.1 (2016-05-04)","title":"Version 1.2.1 (2016-05-04)","text":"CRAN release: 2016-05-04","code":"- Fixed bug in read.td.files (it was not reading data after 2012 because of change of output type given switch from xlsx:read.xlsx to readxl::read_excel)"},{"path":"https://msperlin.github.io/GetTDData/news/index.html","id":"version-12-2016-04-29","dir":"Changelog","previous_headings":"","what":"Version 1.2 (2016-04-29)","title":"Version 1.2 (2016-04-29)","text":"CRAN release: 2016-04-30","code":"- Now using readxl::read_excel, a better excel reader, FASTER and without the java requirements - Additional error checks"},{"path":"https://msperlin.github.io/GetTDData/news/index.html","id":"version-110-2016-04-12","dir":"Changelog","previous_headings":"","what":"Version 1.1.0 (2016-04-12)","title":"Version 1.1.0 (2016-04-12)","text":"","code":"- Added a test for internet connection - Added a new option for overwriting or not the downloaded excel files (saves a lot of time for large batch downloads!) - Fixed typos and improved the text in the vignette"},{"path":[]}]
